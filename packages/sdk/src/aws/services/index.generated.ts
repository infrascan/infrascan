import * as S3 from "./S3.generated";
import * as CloudFront from "./CloudFront.generated";
import * as Route53 from "./Route53.generated";
import * as ApiGateway from "./ApiGateway.generated";
import * as AutoScaling from "./AutoScaling.generated";
import * as CloudWatchLogs from "./CloudWatchLogs.generated";
import * as DynamoDB from "./DynamoDB.generated";
import * as EC2Networking from "./EC2-Networking.generated";
import * as ECSCluster from "./ECS-Cluster.generated";
import * as ECSServices from "./ECS-Services.generated";
import * as ECSTasks from "./ECS-Tasks.generated";
import * as ELB from "./ELB.generated";
import * as Lambda from "./Lambda.generated";
import * as RDS from "./RDS.generated";
import * as SNS from "./SNS.generated";
import * as SQS from "./SQS.generated";

// This file is autogenerated using infrascan-codegen. Do not manually edit this file.
const GLOBAL_SERVICE_SCANNERS = {
    "S3": [S3.performScan],
    "CloudFront": [CloudFront.performScan],
    "Route53": [Route53.performScan]
};
const GLOBAL_NODE_SELECTORS = {
    "S3": [S3.NODE_SELECTORS],
    "CloudFront": [CloudFront.NODE_SELECTORS],
    "Route53": [Route53.NODE_SELECTORS]
};
const GLOBAL_EDGE_SELECTORS = {
    "S3": [S3.NODE_SELECTORS]
};
const REGIONAL_SERVICE_SCANNERS = {
    "ApiGatewayV2": [ApiGateway.performScan],
    "AutoScaling": [AutoScaling.performScan],
    "CloudWatchLogs": [CloudWatchLogs.performScan],
    "DynamoDB": [DynamoDB.performScan],
    "EC2": [EC2Networking.performScan],
    "ECS": [ECSTasks.performScan],
    "ElasticLoadBalancingV2": [ELB.performScan],
    "Lambda": [Lambda.performScan],
    "RDS": [RDS.performScan],
    "SNS": [SNS.performScan],
    "SQS": [SQS.performScan]
};
const REGIONAL_NODE_SELECTORS = {
    "ApiGatewayV2": [ApiGateway.NODE_SELECTORS],
    "CloudWatchLogs": [CloudWatchLogs.NODE_SELECTORS],
    "DynamoDB": [DynamoDB.NODE_SELECTORS],
    "ECS": [ECSTasks.NODE_SELECTORS],
    "ElasticLoadBalancingV2": [ELB.NODE_SELECTORS],
    "Lambda": [Lambda.NODE_SELECTORS],
    "RDS": [RDS.NODE_SELECTORS],
    "SNS": [SNS.NODE_SELECTORS],
    "SQS": [SQS.NODE_SELECTORS]
};
const REGIONAL_EDGE_SELECTORS = {
    "CloudWatchLogs": [CloudWatchLogs.NODE_SELECTORS],
    "SNS": [SNS.NODE_SELECTORS],
    "SQS": [SQS.NODE_SELECTORS]
};

export { REGIONAL_SERVICE_SCANNERS, REGIONAL_NODE_SELECTORS, REGIONAL_EDGE_SELECTORS, GLOBAL_SERVICE_SCANNERS, GLOBAL_NODE_SELECTORS, GLOBAL_EDGE_SELECTORS };
