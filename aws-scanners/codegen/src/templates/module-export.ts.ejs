<%_ const serviceClientClass=`${clientKey}Client`; -%>
import { <%=serviceClientClass%> } from "@aws-sdk/client-<%=service%>";
<%_ if(!locals.skipClientBuilder) { -%>
import { getClient } from "./generated/client";
<%_ } -%>
<%_ const getterImports=getters.map(({ id, fn })=> id ?? fn); -%>
<%_ if(locals.iamRoles !=null) { -%>
<%_ getterImports.push('getIamRoles'); -%>
<%_ } -%>
import { <%=getterImports.join(', ')%> } from "./generated/getters";
<%_ const graphImports = []; -%>
<%_ if(locals.nodes != null) { graphImports.push('getNodes') } -%>
<%_ if(locals.edges != null) { graphImports.push('getEdges') }-%>
<%_ if(graphImports.length > 0) { -%>
import { <%=graphImports.join(', ')%> } from "./generated/graph";
<%_ } -%>
import type { ServiceModule } from "@infrascan/shared-types";

const <%=clientKey%>Scanner: ServiceModule<<%=serviceClientClass%>, "aws"> = {
  provider: "<%= provider %>",
  service: "<%=service%>",
  key: "<%=key%>",
  <%_ if(!locals.skipClientBuilder) { -%>
  getClient,
  <%_ } -%>
  <%_ if(locals.arnLabel != null) { -%>
  arnLabel: "<%=locals.arnLabel%>",
  <%_ } -%>
  callPerRegion: <%=callPerRegion%>,
  getters: [<%=getters.map(({ id, fn }) => id ?? fn).join(' , ')%>],
  <%_ if(locals.nodes != null) { -%>
  getNodes,  
  <%_ } -%>
  <%_ if(locals.edges != null) { -%>
  getEdges,  
  <%_ } -%>
  <%_ if(locals.iamRoles) { -%>
  getIamRoles,
  <%_ } -%>
};

export default <%=clientKey%>Scanner;